#include <WiFi.h>
#include <HTTPClient.h>
#include <SPI.h>
#include <MFRC522.h>
#include <time.h>

// WiFi credentials
const char* ssid = "Home414";
const char* password = "Home1234";

// Google Apps Script Web App URL
const String serverName = "https://script.google.com/macros/s/AKfycbzOPuvteOk871eiDg04xxHMxRWy2ZAaULVHR7qJGsfPNN-zjJDOQ_Fisver6RXLsOg/exec";

// RFID pins
#define SS_PIN 5      // D5
#define RST_PIN 27    // D27

MFRC522 rfid(SS_PIN, RST_PIN);

// Buzzer pin
#define BUZZER_PIN 12 // D12

// NTP time settings
const char* ntpServer = "pool.ntp.org";
const long gmtOffset_sec = -14400;  // GMT-4:00 for Toronto (EDT)
const int daylightOffset_sec = 0;   // No offset needed (already includes DST in summer)


void setup() {
  Serial.begin(115200);
  SPI.begin(18, 19, 23, SS_PIN);  // SCK, MISO, MOSI, SS
  rfid.PCD_Init();

  pinMode(BUZZER_PIN, OUTPUT);

  // WiFi connection
  WiFi.begin(ssid, password);
  Serial.print("Connecting to WiFi");
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("\nWiFi connected");

  // Init and sync NTP time
  configTime(gmtOffset_sec, daylightOffset_sec, ntpServer);
  struct tm timeinfo;
  if (!getLocalTime(&timeinfo)) {
    Serial.println("Failed to obtain time");
  } else {
    Serial.println("Time synced");
  }
}

void loop() {
  if (!rfid.PICC_IsNewCardPresent() || !rfid.PICC_ReadCardSerial()) return;

  String uid = "";
  for (byte i = 0; i < rfid.uid.size; i++) {
    if (rfid.uid.uidByte[i] < 0x10) uid += "0";
    uid += String(rfid.uid.uidByte[i], HEX);
  }

  Serial.println("Scanned UID: " + uid);

  // Beep once on scan
  digitalWrite(BUZZER_PIN, HIGH);
  delay(100);
  digitalWrite(BUZZER_PIN, LOW);

  // Get current time
  struct tm timeinfo;
  String timestamp = "";
  if (getLocalTime(&timeinfo)) {
    char timeStr[25];
    strftime(timeStr, sizeof(timeStr), "%Y-%m-%dT%H:%M:%S%z", &timeinfo);
    timestamp = String(timeStr);
  } else {
    timestamp = "TimeError";
  }

  // Send to Google Sheets
  if (WiFi.status() == WL_CONNECTED) {
    HTTPClient http;
    http.setFollowRedirects(HTTPC_STRICT_FOLLOW_REDIRECTS);
    http.begin(serverName);
    http.addHeader("Content-Type", "application/json");

    String jsonPayload = "{\"uid\":\"" + uid + "\",\"time\":\"" + timestamp + "\"}";
    int httpResponseCode = http.POST(jsonPayload);

    if (httpResponseCode > 0) {
      String response = http.getString();
      Serial.println("Response: " + response);
    } else {
      Serial.print("Error code: ");
      Serial.println(httpResponseCode);
    }

    http.end();
  }

  rfid.PICC_HaltA();
  rfid.PCD_StopCrypto1();
  delay(1000);  // avoid double-scan
}
